diff --git a/dist/-private.js b/dist/-private.js
index cefa5036a4383fa827e8731be1699500bdf45ec4..b616f10f95977d77027e45ec09f5e5593a87199c 100644
--- a/dist/-private.js
+++ b/dist/-private.js
@@ -12,13 +12,13 @@ GlobalRef[PkgInfo.name] = GlobalRef[PkgInfo.name] ?? {
   __version: PkgInfo.version
 };
 const GlobalSink = GlobalRef[PkgInfo.name];
-if (macroCondition(getGlobalConfig().WarpDrive.env.DEBUG)) {
+if (macroCondition(getGlobalConfig().WarpDrive?.env?.DEBUG)) {
   if (GlobalSink.__version !== PkgInfo.version) {
     throw new Error('Multiple versions of WarpDrive detected, the application will malfunction.');
   }
 }
 const ModuleScopedCaches = GlobalSink.__warpDrive_ModuleScopedCaches ?? {};
-if (macroCondition(getGlobalConfig().WarpDrive.env.TESTING)) {
+if (macroCondition(getGlobalConfig().WarpDrive?.env?.TESTING)) {
   if (!GlobalSink.__warpDrive_ModuleScopedCaches) {
     GlobalSink.__warpDrive_ModuleScopedCaches = ModuleScopedCaches;
   } else {
@@ -35,7 +35,7 @@ Multiple copies of EmberData have been detected. This may be due to a bug in emb
   GlobalSink.__warpDrive_hasOtherCopy = true;
 }
 function getOrSetGlobal(key, value) {
-  if (macroCondition(getGlobalConfig().WarpDrive.env.TESTING)) {
+  if (macroCondition(getGlobalConfig().WarpDrive?.env?.TESTING)) {
     const existing = ModuleScopedCaches[key];
     if (existing === undefined) {
       return ModuleScopedCaches[key] = value;
@@ -55,7 +55,7 @@ function setTransient(key, value) {
   return ModuleScopedCaches[globalKey] = value;
 }
 function getOrSetUniversal(key, value) {
-  if (macroCondition(getGlobalConfig().WarpDrive.env.TESTING)) {
+  if (macroCondition(getGlobalConfig().WarpDrive?.env?.TESTING)) {
     const existing = UniversalCache[key];
     if (existing === undefined) {
       return UniversalCache[key] = value;
